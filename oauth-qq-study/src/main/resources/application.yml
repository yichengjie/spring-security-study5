server:
  port: 80

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.springframework.boot.autoconfigure: DEBUG

spring:
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: 00481ad93fff331618bc
            client-secret: 93593bd61861e311d478ebfba5892a21568ea606
            redirect-uri-template: "http://localhost:8080/login/oauth2/code/{registrationId}"
          qq:
            client-id: 100550231
            client-secret: 69b6ab57b22f3c2fe6a6149274e3295e
            provider: qq
            client-name: QQ登录
            authorization-grant-type: authorization_code
            client-authentication-method: post
            scope: get_user_info,list_album,upload_pic,do_like
            redirect-uri-template: "http://www.pinzhi365.com/qqLogin/{registrationId}"
        provider:
          qq:
            authorization-uri: https://graph.qq.com/oauth2.0/authorize
            token-uri: https://graph.qq.com/oauth2.0/token
            # 配置为QQ获取OpenId的URL
            user-info-uri: https://graph.qq.com/oauth2.0/me
            user-name-attribute: "nickname"

#  spring.thymeleaf.prefix=classpath:/templates/
#  spring.thymeleaf.suffix=.html
#  spring.thymeleaf.mode=LEGACYHTML5
#  spring.thymeleaf.encoding=UTF-8
#  spring.thymeleaf.content-type=text/html
#  spring.thymeleaf.cache=false





















